{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/InputField/InputField.module.css","components/App.module.css","redux/phonebook/phonebook-actions.js","API/API.js","redux/phonebook/phonebook-operations.js","components/Contact/Contact.jsx","redux/phonebook/phonebook-selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/InputField/InputField.jsx","components/InputField/InputAttr.jsx","components/ContactForm/ContactForm.jsx","components/App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","getContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","fetchContacts","dispatch","API","console","log","message","Contact","name","number","useDispatch","className","styles","item","type","onClick","state","contacts","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","useEffect","list","map","contactsList","Filter","value","onChange","e","target","InputField","props","label","input","inputAttr","pattern","title","required","ContactForm","useState","setName","setNumber","reset","form","onSubmit","preventDefault","alert","App","app","createReducer","_","action","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","phonebookReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.378acf26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__2FuK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__8nYLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3uoKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3ofTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputField_input__1ia6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2F00t\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\nexport const filterContacts = createAction(\"contacts/Filter\");\n","import axios from \"axios\";\n\naxios.defaults.baseURL =\n  \"https://my-json-server.typicode.com/Kosano20/goit-react-hw-07-phonebook\";\n\nexport async function getContacts() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post(\"/contacts\", contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  await axios.delete(`/contacts/${id}`);\n  return id;\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"../../redux/phonebook/phonebook-actions\";\nimport * as API from \"../../API/API\";\n\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n  try {\n    const data = await API.getContacts();\n    console.log(data);\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  async (dispatch) => {\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContactRequest());\n\n    try {\n      const data = await API.addContact(contact);\n      dispatch(addContactSuccess(data));\n    } catch (error) {\n      dispatch(addContactError(error));\n    }\n  };\n\nexport const deleteContact = (id) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n  try {\n    await API.deleteContact(id);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-operations\";\nimport styles from \"./Contact.module.css\";\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => dispatch(deleteContact(id));\n  return (\n    <li key={id} className={styles.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={onDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getFilteredContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter?.toLowerCase();\n  return contacts.filter((contact) =>\n    contact?.name?.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Contact from \"../Contact\";\nimport { getFilteredContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport styles from \"./ContactsList.module.css\";\nimport { fetchContacts } from \"../../redux/phonebook/phonebook-operations\";\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const list = contacts?.map(({ id, name, number }) => (\n    <Contact key={id} name={name} number={number} id={id} />\n  ));\n  return <ul className={styles.contactsList}>{list}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\nimport { filterContacts } from \"../../redux/phonebook/phonebook-actions\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = (e) => dispatch(filterContacts(e.target.value));\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={styles.Filter}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport styles from \"./InputField.module.css\";\n\nconst InputField = (props) => (\n  <label>\n    {props.label}\n    <input {...props} className={styles.input} />\n  </label>\n);\n\nexport default InputField;\n","const inputAttr = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n    required: true,\n    label: \"Name\",\n  },\n  number: {\n    type: \"text\",\n    name: \"number\",\n    pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n    required: true,\n    label: \"Number\",\n  },\n};\n\nexport default inputAttr;\n","import React, { useState } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport InputField from \"../InputField/InputField\";\nimport inputAttr from \"../InputField/InputAttr\";\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (contacts?.map((contact) => contact.name).includes(name)) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <InputField\n        {...inputAttr.name}\n        value={name}\n        onChange={handleNameChange}\n      />\n      <InputField\n        {...inputAttr.number}\n        value={number}\n        onChange={handleNumberChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ContactList from \"./ContactsList\";\nimport { fetchContacts } from \"../redux/phonebook/phonebook-operations\";\nimport Filter from \"./Filter\";\nimport ContactForm from \"./ContactForm\";\nimport styles from \"./App.module.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.app}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  filterContacts,\n  fetchContactsSuccess,\n} from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, action) => [action.payload],\n  [addContactSuccess]: (state, action) => {\n    return [...state, action.payload];\n  },\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContacts]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n    logger,\n  }),\n];\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}